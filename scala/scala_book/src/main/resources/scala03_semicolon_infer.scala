//package chapter04
//
//
//
//object scala03_semicolon_infer extends App {
//
//  /**
//   * 4.3分号推断
//   *
//   * 在Scala程序中，每条语句最后的分号通常是可选的。你想要的话可以输入一个，但如果当前行只有这条语句，则分号并不是必需的。另一方面，如果想在同一行中包含多条语句，分号就有必要了:
//   */
//  val s = "hellow";
//  println(s)
//
//
//  /**
//   * 如果想要一条跨多行的语句，则大多数情况下直接换行即可，Scala会帮你在正确的地方断句。例如，如下代码会被当作一条4行的语句处理:
//   */
//  val x = 0
//  val des = if x < 2 then
//    "too small"
//  else
//    "ok"
//
//  /**
//   * 分号推断规则
//   *
//   * 相比分号推断的效果,(自动)分隔语句的精确规则简单得出人意料。
//   * 概括地说，除非以下任何一条为true，代码行的末尾才会被当作分号处理:
//   *
//   * 1.当前行以一个不能作为语句结尾的词结尾，如英文句点或中缀操作符。
//   * 2下一行以一个不能作为语句开头的词开头。
//   * 3.当前行的行尾出现在圆括号(...)或方括号[...]内，因为无论如何圆括号和方括号都不能(直接)包含多条语句。
//   */
//
//}
