scala嵌套作用域的不同域里可以同时存在相同的变量名，只是外面定义的同名变量被内部屏蔽了
(scala的shell 之所以重复定义相同的字面量，因为每定义一次会产生一个新的作用域，可以将前面定义的字面量屏蔽)

scala可以在方法中嵌套方法，嵌套方法将被编译为java类的形式，运行时被实例化

Scala的闭包捕获的是变量本身，而不是变量引用的值 从外面修改内部能捕获到，从内部修改外部也能看到。
Java则不同，Java的lambda表达式并不允许访问外围作用域的可修改变量，除非这些变量是final或实效final的，所以本质上java lambda表达式内捕获变量和捕获它的值之间并没有差别。

Scala禁止在同一个类中使用相同的名称命名字段和方法，但在Java中这是被允许的。

Scala编译器会默认你的类扩展自scala.AnyRef，对应到Java平台，这与java.lang.Object相同。

Scala要求我们在所有重写了父类具体成员的成员(字段，方法)之前加上override修饰符 ，这与java只对重写的方法前加(且不是必须的)有点不同

与Java相比，Scala的import子句要灵活得多。主要的区别有3点，在Scala中,import子句可以:
@出现在任意位置。
@引用对象（无论是单例对象还是常规对象)，而不只是包。
@让你重命名并隐藏某些被引入的成员。

Java中可以从外部类访问其内部类的私有成员。而Scala不行

在Scala中，只能从定义Protected成员的子类访问该成员。而Java允许同一个包内的其他类访问这个类的受保护成员。